## SAP logs on OVHcloud Logs Data Platform
## Retrieve logs from different sources related to SAP environments.
## This rsyslog config file gathers files important for the management and audit of a SAP environment.
#
# rsyslog module to convert any text file into a rsyslog message:
# https://www.rsyslog.com/doc/v8-stable/configuration/modules/imfile.html
#
# rsyslog messages are displayed on graylog as (see template):
# <TIMESTAMP_ISO8601> <HOSTNAME> <SAP_SID> <HANA_SID> <TAG> <FILE_PATH> <MESSAGE>
# syslog messages are displayed on graylog as (see template):
# <TIMESTAMP_ISO8601> <HOSTNAME> <SAP_SID> <HANA_SID> <TAG> <PROGRAMNAME> <MESSAGE>
#
# You can also create your own input at the end of the file, following the specified format:
# input(
#   type            =   "imfile"
#   file            =   "<FILE ABSOLUTE PATH>"
#   tag             =   "<LABEL>:"
#   startmsg.regex  =   "<REGEX>"
#   ruleset         =   "<RULESET>"
# )
#
# Examples 
# Standard HANA daemon messages. 
# input(
#   type            =   "imfile"
#   file            =   "/hana/shared/<HANA_SID>/HDB<INSTANCE_NUMBER>/<HOSTNAME>/trace/daemon_<HOSTNAME>.*"
#   tag             =   "<SAP_SID>:/<HANA_SID>:/daemon:"
#   startmsg.regex  =   "\\[[0-9]+\\]\\{-?[0-9]+\\}\\[-?[0-9]+/-?[0-9]+\\] [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]+"
#   ruleset         =   "saplog_ruleset"
# )
#
# Troubleshooting PAS instance startup failure.
# input(
#   type            =   "imfile"
#   file            =   "/usr/sap/<SAP_SID>/D<INSTANCE_NUMBER>/work/sapstartsrv.log"
#   tag             =   "<SAP_SID>:/<HANA_SID>:/sapstartsrv_as:"
#   startmsg.regex  =   "\\[Thr [0-9]+\\] [a-zA-Z]{3} [a-zA-Z]{3} +[0-9]{1,2} [0-9]{2}:[0-9]{2}:[0-9]{2} [0-9]{4}"
#   ruleset         =   "saplog_ruleset"
# )

global(
    maxMessageSize = "64k"
)

module(
    load                =   "imfile"
    statefile.directory =   "/var/spool/rsyslog"
    readTimeout         =   "20"
)

# Define the format of the logs to be forwarded to the OVHcloud Logs Data Platform.
template(
    name    =   "saplog_template"
    type    =   "string"
    string  =   "%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag:R,ERE,1,BLANK:([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([a-z_]*:)--end% %syslogtag:R,ERE,2,BLANK:([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([a-z_]*:)--end% %syslogtag:R,ERE,3,FIELD:([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([a-z_]*:)--end% %$!metadata!filename% %msg%"
)

# Default ruleset, used for most logs.
ruleset(name="saplog_ruleset") {
    action(
        type                    =   "omfwd"
        template                =   "saplog_template"
        target                  =   "<LDP_TARGET_PLATFORM>"	
        port                    =   "6514"
        protocol                =   "tcp"
        KeepAlive               =   "on"
        StreamDriver            =   "gtls"
        StreamDriverMode        =   "1"
        StreamDriverAuthMode    =   "x509/name"
        StreamDriver.CAFile     =   "<LDP_CA_FILE_PATH>"
        action.resumeRetryCount =   "-1"
    )

}

# This audit ruleset can redirect either to the default data stream
# or to a dedicated audit stream.
ruleset(name="audit_saplog_ruleset") {
    action(
        type                    =   "omfwd"
        template                =   "saplog_template"
        target                  =   "<AUDIT_LDP_TARGET_PLATFORM>"	
        port                    =   "6514"
        protocol                =   "tcp"
        KeepAlive               =   "on"
        StreamDriver            =   "gtls"
        StreamDriverMode        =   "1"
        StreamDriverAuthMode    =   "x509/name"
        StreamDriver.CAFile     =   "<AUDIT_LDP_CA_FILE_PATH>"
        action.resumeRetryCount =   "-1"
    )
}

# Define the format of the logs to be forwarded to the OVHcloud Logs Data Platform.
template(
    name    =   "syslog_saplog_template"
    type    =   "string"
    string  =   "%TIMESTAMP:::date-rfc3339% %HOSTNAME% <SAP_SID>: <HANA_SID>: syslog: %syslogtag% %msg%"
)

# This ruleset can redirect either to the default data stream
# or to a dedicated audit stream.
ruleset(name="syslog_saplog_ruleset") {
    if ($programname contains "audit" or $programname startswith "HDB") then {
        action(
            type                    =   "omfwd"
            template                =   "syslog_saplog_template"
            target                  =   "<AUDIT_LDP_TARGET_PLATFORM>"	
            port                    =   "6514"
            protocol                =   "tcp"
            KeepAlive               =   "on"
            StreamDriver            =   "gtls"
            StreamDriverMode        =   "1"
            StreamDriverAuthMode    =   "x509/name"
            StreamDriver.CAFile     =   "<AUDIT_LDP_CA_FILE_PATH>"
            action.resumeRetryCount =   "-1"
        )
    } else {
        action(
            type                    =   "omfwd"
            template                =   "syslog_saplog_template"
            target                  =   "<LDP_TARGET_PLATFORM>"	
            port                    =   "6514"
            protocol                =   "tcp"
            KeepAlive               =   "on"
            StreamDriver            =   "gtls"
            StreamDriverMode        =   "1"
            StreamDriverAuthMode    =   "x509/name"
            StreamDriver.CAFile     =   "<LDP_CA_FILE_PATH>"
            action.resumeRetryCount =   "-1"
        )
    }
}

# Define the format of the logs for HANA TENANT to be forwarded to the OVHcloud Logs Data Platform.
template(
    name    =   "saplog_hana_tenant_template"
    type    =   "string"
    string  =   "%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag:R,ERE,1,BLANK:([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([a-z_]*:)--end% %syslogtag:R,ERE,2,BLANK:([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([a-z_]*:)--end% %syslogtag:R,ERE,3,BLANK:([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([a-z_]*:)--end% %syslogtag:R,ERE,4,BLANK:([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([A-Z0-9]{3}:)/([a-z_]*:)--end% %$!metadata!filename% %msg%"
)

ruleset(name="saplog_hana_tenant_ruleset") {
    action(
        type                    =   "omfwd"
        template                =   "saplog_hana_tenant_template"
        target                  =   "<LDP_TARGET_PLATFORM>"	
        port                    =   "6514"
        protocol                =   "tcp"
        KeepAlive               =   "on"
        StreamDriver            =   "gtls"
        StreamDriverMode        =   "1"
        StreamDriverAuthMode    =   "x509/name"
        StreamDriver.CAFile     =   "<LDP_CA_FILE_PATH>"
        action.resumeRetryCount =   "-1"
    )

}

# SYSLOG
# ----------
call syslog_saplog_ruleset

# FIREWALL
# ----------
input(
    type    =	"imfile"
    file    =	"/var/log/firewall"
    tag     =	"<SAP_SID>:/<HANA_SID>:/firewall:"
    ruleset =	"saplog_ruleset"
)

# SAPTUNE
# ----------
input(
    type    =	"imfile"
    file    =	"/var/log/saptune/saptune.log"
    tag     =	"<SAP_SID>:/<HANA_SID>:/saptune:"
    ruleset =	"saplog_ruleset"
)

# ZYPP/HISTORY
# ----------
input(
    type            =	"imfile"
    file            =	"/var/log/zypp/history"
    tag             =	"<SAP_SID>:/<HANA_SID>:/zypp_history:"
    startmsg.regex  =   "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}"
    ruleset         =	"saplog_ruleset"
)
